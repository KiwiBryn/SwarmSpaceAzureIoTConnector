{
  "runtime": "Net60",
  "defaultVariables": null,
  "documentGenerator": {
    "fromDocument": {
      "json": "{\r\n  \"openapi\": \"3.0.1\",\r\n  \"info\": {\r\n    \"title\": \"Hive Service REST API\",\r\n    \"version\": \"v1\"\r\n  },\r\n  \"servers\": [ { \"url\": \"/hive\" } ],\r\n  \"security\": [\r\n    { \"cookieAuth\": [] },\r\n    { \"bearerTokenAuth\": [] }\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"name\": \"auth\",\r\n      \"description\": \"Authentication: logging in and out of Hive\"\r\n    },\r\n    {\r\n      \"name\": \"users\",\r\n      \"description\": \"Get and update user info\"\r\n    },\r\n    {\r\n      \"name\": \"devices\",\r\n      \"description\": \"Get and manage devices on the Swarm network\"\r\n    },\r\n    {\r\n      \"name\": \"telemetry\",\r\n      \"description\": \"Get telemetry for devices\"\r\n    },\r\n    {\r\n      \"name\": \"user context\",\r\n      \"description\": \"Get user context\"\r\n    },\r\n    {\r\n      \"name\": \"messages\",\r\n      \"description\": \"Sending and retrieving user messages\"\r\n    },\r\n    {\r\n      \"name\": \"organizations\",\r\n      \"description\": \"Get and update organization info.\"\r\n    }\r\n  ],\r\n  \"paths\": {\r\n    \"/api/v1/devices/metadata/{deviceType}/{deviceId}\": {\r\n      \"put\": {\r\n        \"tags\": [ \"devices\" ],\r\n        \"summary\": \"PUT device metadata\",\r\n        \"description\": \"Modify metadata for a device.\",\r\n        \"operationId\": \"putDeviceMetadata\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"deviceType\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"integer\",\r\n              \"format\": \"int32\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"deviceId\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"integer\",\r\n              \"format\": \"int32\"\r\n            }\r\n          }\r\n        ],\r\n        \"requestBody\": {\r\n          \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/DeviceMetadataUpdateJson\" } } },\r\n          \"required\": true\r\n        },\r\n        \"responses\": {\r\n          \"401\": {\r\n            \"description\": \"Unauthorized\",\r\n            \"content\": { \"*/*\": { \"schema\": { \"$ref\": \"#/components/schemas/ApiError\" } } }\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\",\r\n            \"content\": { \"*/*\": { \"schema\": { \"$ref\": \"#/components/schemas/ApiError\" } } }\r\n          },\r\n          \"400\": {\r\n            \"description\": \"Bad Request\",\r\n            \"content\": { \"*/*\": { \"schema\": { \"$ref\": \"#/components/schemas/ApiError\" } } }\r\n          },\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": { \"*/*\": { \"schema\": { \"$ref\": \"#/components/schemas/StatusJson\" } } }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/api/v1/users/me/password\": {\r\n      \"post\": {\r\n        \"tags\": [ \"users\" ],\r\n        \"summary\": \"POST update password\",\r\n        \"description\": \"Updates the password for the current user given their old password.\",\r\n        \"operationId\": \"updatePassword\",\r\n        \"requestBody\": {\r\n          \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/PasswordChangeRequestJson\" } } },\r\n          \"required\": true\r\n        },\r\n        \"responses\": {\r\n          \"401\": {\r\n            \"description\": \"Unauthorized\",\r\n            \"content\": { \"*/*\": { \"schema\": { \"$ref\": \"#/components/schemas/ApiError\" } } }\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\",\r\n            \"content\": { \"*/*\": { \"schema\": { \"$ref\": \"#/components/schemas/ApiError\" } } }\r\n          },\r\n          \"400\": {\r\n            \"description\": \"Bad Request\",\r\n            \"content\": { \"*/*\": { \"schema\": { \"$ref\": \"#/components/schemas/ApiError\" } } }\r\n          },\r\n          \"204\": { \"description\": \"No Content\" }\r\n        }\r\n      }\r\n    },\r\n    \"/api/v1/users/me/info\": {\r\n      \"get\": {\r\n        \"tags\": [ \"users\" ],\r\n        \"summary\": \"GET my account info\",\r\n        \"description\": \"Get a JSON of the account info for the current user.\",\r\n        \"operationId\": \"getInfo\",\r\n        \"responses\": {\r\n          \"401\": {\r\n            \"description\": \"Unauthorized\",\r\n            \"content\": { \"*/*\": { \"schema\": { \"$ref\": \"#/components/schemas/ApiError\" } } }\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\",\r\n            \"content\": { \"*/*\": { \"schema\": { \"$ref\": \"#/components/schemas/ApiError\" } } }\r\n          },\r\n          \"400\": {\r\n            \"description\": \"Bad Request\",\r\n            \"content\": { \"*/*\": { \"schema\": { \"$ref\": \"#/components/schemas/ApiError\" } } }\r\n          },\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": { \"*/*\": { \"schema\": { \"$ref\": \"#/components/schemas/WebUser\" } } }\r\n          }\r\n        },\r\n        \"deprecated\": true\r\n      },\r\n      \"post\": {\r\n        \"tags\": [ \"users\" ],\r\n        \"summary\": \"POST my account info\",\r\n        \"description\": \"Update, via JSON, the account info for the current user.\",\r\n        \"operationId\": \"updateInfo\",\r\n        \"requestBody\": {\r\n          \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/UserInfoChangeRequestJson\" } } },\r\n          \"required\": true\r\n        },\r\n        \"responses\": {\r\n          \"401\": {\r\n            \"description\": \"Unauthorized\",\r\n            \"content\": { \"*/*\": { \"schema\": { \"$ref\": \"#/components/schemas/ApiError\" } } }\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\",\r\n            \"content\": { \"*/*\": { \"schema\": { \"$ref\": \"#/components/schemas/ApiError\" } } }\r\n          },\r\n          \"400\": {\r\n            \"description\": \"Bad Request\",\r\n            \"content\": { \"*/*\": { \"schema\": { \"$ref\": \"#/components/schemas/ApiError\" } } }\r\n          },\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": { \"*/*\": { \"schema\": { \"$ref\": \"#/components/schemas/WebUser\" } } }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/api/v1/messages\": {\r\n      \"get\": {\r\n        \"tags\": [ \"messages\" ],\r\n        \"summary\": \"GET user messages\",\r\n        \"description\": \"This endpoint requests a JSON formatted array of messages which are filtered by the parameters. Only returns messages from the last 30 days.<br/>Note: If a packetid is specified, all other filters will be ignored, and the message with that packetid will always be returned unless it's more than 30 days old.\",\r\n        \"operationId\": \"getMessages\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"organizationId\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Numeric Organization ID.\",\r\n            \"required\": false,\r\n            \"schema\": {\r\n              \"type\": \"integer\",\r\n              \"format\": \"int32\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"userApplicationId\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Numeric User Application ID.\",\r\n            \"required\": false,\r\n            \"schema\": {\r\n              \"type\": \"integer\",\r\n              \"format\": \"int32\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"devicetype\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Numeric Swarm device type.\",\r\n            \"required\": false,\r\n            \"schema\": {\r\n              \"type\": \"integer\",\r\n              \"format\": \"int32\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"deviceid\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Numeric Swarm device ID.\",\r\n            \"required\": false,\r\n            \"schema\": { \"type\": \"string\" }\r\n          },\r\n          {\r\n            \"name\": \"devicename\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Swarm device name. Deprecated and no longer used to filter messages. Use devicetype and deviceid instead.\",\r\n            \"required\": false,\r\n            \"deprecated\": true,\r\n            \"schema\": { \"type\": \"string\" }\r\n          },\r\n          {\r\n            \"name\": \"viadeviceid\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Numeric Swarm firsthop groundstation device ID. Use -1 for last known nexthop for this device.\",\r\n            \"required\": false,\r\n            \"schema\": { \"type\": \"string\" }\r\n          },\r\n          {\r\n            \"name\": \"count\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Result count requested. Default is 100. Max is 1000.\",\r\n            \"required\": false,\r\n            \"schema\": {\r\n              \"type\": \"integer\",\r\n              \"format\": \"int32\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"status\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Numeric filter for message status. Use value of 0 for unacknowledged (not yet processed by user), 2 for acknowledged. Default is 0. Optional.\",\r\n            \"required\": false,\r\n            \"schema\": {\r\n              \"type\": \"integer\",\r\n              \"format\": \"int32\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"beforepacketid\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Used for pagination. Pass the last packet ID from the previous page. Optional.\",\r\n            \"required\": false,\r\n            \"schema\": {\r\n              \"type\": \"integer\",\r\n              \"format\": \"int64\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"packetid\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Numeric filter for packet ID.  Returns single message matching packet ID. Optional.\",\r\n            \"required\": false,\r\n            \"schema\": {\r\n              \"type\": \"integer\",\r\n              \"format\": \"int64\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"direction\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Filter for direction of travel.  Use \\\"fromdevice\\\" for messages received from Swarm devices, \\\"todevice\\\" for messages sent to Swarm devices, \\\"all\\\" for both. Default is \\\"fromdevice\\\". Optional.\",\r\n            \"required\": false,\r\n            \"schema\": { \"type\": \"string\" }\r\n          },\r\n          {\r\n            \"name\": \"startDate\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Start date filter as UTC ISO 8601. Must be within the last 30 days. Optional.\",\r\n            \"required\": false,\r\n            \"schema\": {\r\n              \"type\": \"string\",\r\n              \"format\": \"date-time\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"endDate\",\r\n            \"in\": \"query\",\r\n            \"description\": \"End date filter as UTC ISO 8601. Must be within the last 30 days. Must be after startDate. Optional.\",\r\n            \"required\": false,\r\n            \"schema\": {\r\n              \"type\": \"string\",\r\n              \"format\": \"date-time\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"401\": {\r\n            \"description\": \"Unauthorized\",\r\n            \"content\": { \"*/*\": { \"schema\": { \"$ref\": \"#/components/schemas/ApiError\" } } }\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\",\r\n            \"content\": { \"*/*\": { \"schema\": { \"$ref\": \"#/components/schemas/ApiError\" } } }\r\n          },\r\n          \"400\": {\r\n            \"description\": \"Bad Request\",\r\n            \"content\": { \"*/*\": { \"schema\": { \"$ref\": \"#/components/schemas/ApiError\" } } }\r\n          },\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": { \"$ref\": \"#/components/schemas/UserMessage\" }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"post\": {\r\n        \"tags\": [ \"messages\" ],\r\n        \"summary\": \"POST user messages\",\r\n        \"description\": \"<p>This endpoint submits a JSON formatted UserMessage object for delivery to a Swarm device. A JSON object is returned with a newly assigned <code>packetId</code> and <code>status</code> of<code>OK</code> on success, or <code>ERROR</code> (with a description of the error) on failure.</p><p>The current user must have access to the <code>userApplicationId</code> and <code>device</code> given inside the UserMessage JSON. The device must also have the ability to receive messages from the Hive (\\\"two-way communication\\\") enabled. If these conditions are not met, a response with status code 403 (Forbidden) will be returned.</p><p>Note that the <code>data</code> field is the <b>Base64-encoded</b> version of the data to be sent. This allows the sending of binary, as well as text, data.</p>\",\r\n        \"operationId\": \"addApplicationMessage\",\r\n        \"requestBody\": {\r\n          \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/UserMessage\" } } },\r\n          \"required\": true\r\n        },\r\n        \"responses\": {\r\n          \"401\": {\r\n            \"description\": \"Unauthorized\",\r\n            \"content\": { \"*/*\": { \"schema\": { \"$ref\": \"#/components/schemas/ApiError\" } } }\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\",\r\n            \"content\": { \"*/*\": { \"schema\": { \"$ref\": \"#/components/schemas/ApiError\" } } }\r\n          },\r\n          \"400\": {\r\n            \"description\": \"Bad Request\",\r\n            \"content\": { \"*/*\": { \"schema\": { \"$ref\": \"#/components/schemas/ApiError\" } } }\r\n          },\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/PacketPostReturn\" } } }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/api/v1/messages/rxack/{packetId}\": {\r\n      \"post\": {\r\n        \"tags\": [ \"messages\" ],\r\n        \"summary\": \"Acknowledge receipt of a user message. \",\r\n        \"description\": \"This endpoint acknowledges receipt of a user message. Path variable {packetId} is required. A JSON object is returned with the new \\\"packetId\\\" and \\\"status\\\" of \\\"OK\\\" for success or \\\"ERROR\\\" for failure.\",\r\n        \"operationId\": \"ackRxMessage\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"packetId\",\r\n            \"in\": \"path\",\r\n            \"description\": \"Numeric packet ID. Required.\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"integer\",\r\n              \"format\": \"int64\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"status\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Set numeric message status. Use value of 0 for received, 2 for acknowledged. Default is 2. Optional.\",\r\n            \"required\": false,\r\n            \"schema\": {\r\n              \"type\": \"integer\",\r\n              \"format\": \"int32\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"401\": {\r\n            \"description\": \"Unauthorized\",\r\n            \"content\": { \"*/*\": { \"schema\": { \"$ref\": \"#/components/schemas/ApiError\" } } }\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\",\r\n            \"content\": { \"*/*\": { \"schema\": { \"$ref\": \"#/components/schemas/ApiError\" } } }\r\n          },\r\n          \"400\": {\r\n            \"description\": \"Bad Request\",\r\n            \"content\": { \"*/*\": { \"schema\": { \"$ref\": \"#/components/schemas/ApiError\" } } }\r\n          },\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/PacketPostReturn\" } } }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/api/v1/devices/register\": {\r\n      \"post\": {\r\n        \"tags\": [ \"devices\" ],\r\n        \"summary\": \"POST register device\",\r\n        \"description\": \"Register a field device using its auth code. Returns the registered device.\",\r\n        \"operationId\": \"registerDevice\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"authCode\",\r\n            \"in\": \"query\",\r\n            \"required\": true,\r\n            \"schema\": { \"type\": \"string\" }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"401\": {\r\n            \"description\": \"Unauthorized\",\r\n            \"content\": { \"*/*\": { \"schema\": { \"$ref\": \"#/components/schemas/ApiError\" } } }\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\",\r\n            \"content\": { \"*/*\": { \"schema\": { \"$ref\": \"#/components/schemas/ApiError\" } } }\r\n          },\r\n          \"400\": {\r\n            \"description\": \"Bad Request\",\r\n            \"content\": { \"*/*\": { \"schema\": { \"$ref\": \"#/components/schemas/ApiError\" } } }\r\n          },\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/Device\" } } }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/api/v1/devices/deregister\": {\r\n      \"post\": {\r\n        \"tags\": [ \"devices\" ],\r\n        \"summary\": \"POST deregister device\",\r\n        \"description\": \"Deregister a field device using its auth code or ID.\",\r\n        \"operationId\": \"deregisterDevice\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"authCode\",\r\n            \"in\": \"query\",\r\n            \"required\": false,\r\n            \"schema\": { \"type\": \"string\" }\r\n          },\r\n          {\r\n            \"name\": \"deviceId\",\r\n            \"in\": \"query\",\r\n            \"required\": false,\r\n            \"schema\": { \"type\": \"string\" }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"401\": {\r\n            \"description\": \"Unauthorized\",\r\n            \"content\": { \"*/*\": { \"schema\": { \"$ref\": \"#/components/schemas/ApiError\" } } }\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\",\r\n            \"content\": { \"*/*\": { \"schema\": { \"$ref\": \"#/components/schemas/ApiError\" } } }\r\n          },\r\n          \"400\": {\r\n            \"description\": \"Bad Request\",\r\n            \"content\": { \"*/*\": { \"schema\": { \"$ref\": \"#/components/schemas/ApiError\" } } }\r\n          },\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": { \"*/*\": { \"schema\": { \"$ref\": \"#/components/schemas/StatusJson\" } } }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/api/v1/devices/deactivate\": {\r\n      \"post\": {\r\n        \"tags\": [ \"devices\" ],\r\n        \"summary\": \"POST deactivate device\",\r\n        \"description\": \"Deprecated: use POST /hive/api/v1/devices/deregister instead. Deregister a field device using its auth code or ID.\",\r\n        \"operationId\": \"deactivateDevice\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"authCode\",\r\n            \"in\": \"query\",\r\n            \"required\": false,\r\n            \"schema\": { \"type\": \"string\" }\r\n          },\r\n          {\r\n            \"name\": \"deviceId\",\r\n            \"in\": \"query\",\r\n            \"required\": false,\r\n            \"schema\": { \"type\": \"string\" }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"401\": {\r\n            \"description\": \"Unauthorized\",\r\n            \"content\": { \"*/*\": { \"schema\": { \"$ref\": \"#/components/schemas/ApiError\" } } }\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\",\r\n            \"content\": { \"*/*\": { \"schema\": { \"$ref\": \"#/components/schemas/ApiError\" } } }\r\n          },\r\n          \"400\": {\r\n            \"description\": \"Bad Request\",\r\n            \"content\": { \"*/*\": { \"schema\": { \"$ref\": \"#/components/schemas/ApiError\" } } }\r\n          },\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": { \"*/*\": { \"schema\": { \"$ref\": \"#/components/schemas/StatusJson\" } } }\r\n          }\r\n        },\r\n        \"deprecated\": true\r\n      }\r\n    },\r\n    \"/api/v1/devices/activate\": {\r\n      \"post\": {\r\n        \"tags\": [ \"devices\" ],\r\n        \"summary\": \"POST activate device\",\r\n        \"description\": \"Deprecated: use POST /hive/api/v1/devices/register instead. Register a field device using its auth code. Returns the registered device.\",\r\n        \"operationId\": \"activateDevice\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"authCode\",\r\n            \"in\": \"query\",\r\n            \"required\": true,\r\n            \"schema\": { \"type\": \"string\" }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"401\": {\r\n            \"description\": \"Unauthorized\",\r\n            \"content\": { \"*/*\": { \"schema\": { \"$ref\": \"#/components/schemas/ApiError\" } } }\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\",\r\n            \"content\": { \"*/*\": { \"schema\": { \"$ref\": \"#/components/schemas/ApiError\" } } }\r\n          },\r\n          \"400\": {\r\n            \"description\": \"Bad Request\",\r\n            \"content\": { \"*/*\": { \"schema\": { \"$ref\": \"#/components/schemas/ApiError\" } } }\r\n          },\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/Device\" } } }\r\n          }\r\n        },\r\n        \"deprecated\": true\r\n      }\r\n    },\r\n    \"/api/v1/organizations/{orgId}\": {\r\n      \"get\": {\r\n        \"tags\": [ \"organizations\" ],\r\n        \"summary\": \"GET organization by id\",\r\n        \"operationId\": \"getOrganizationById\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"orgId\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"integer\",\r\n              \"format\": \"int32\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"401\": {\r\n            \"description\": \"Unauthorized\",\r\n            \"content\": { \"*/*\": { \"schema\": { \"$ref\": \"#/components/schemas/ApiError\" } } }\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\",\r\n            \"content\": { \"*/*\": { \"schema\": { \"$ref\": \"#/components/schemas/ApiError\" } } }\r\n          },\r\n          \"400\": {\r\n            \"description\": \"Bad Request\",\r\n            \"content\": { \"*/*\": { \"schema\": { \"$ref\": \"#/components/schemas/ApiError\" } } }\r\n          },\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/Organization\" } } }\r\n          }\r\n        }\r\n      },\r\n      \"patch\": {\r\n        \"tags\": [ \"organizations\" ],\r\n        \"summary\": \"PATCH organization\",\r\n        \"description\": \"Edit an organization. Only the provided properties will be changed.\",\r\n        \"operationId\": \"patchOrganization\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"orgId\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"integer\",\r\n              \"format\": \"int32\"\r\n            }\r\n          }\r\n        ],\r\n        \"requestBody\": {\r\n          \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/OrganizationUpdateJson\" } } },\r\n          \"required\": true\r\n        },\r\n        \"responses\": {\r\n          \"401\": {\r\n            \"description\": \"Unauthorized\",\r\n            \"content\": { \"*/*\": { \"schema\": { \"$ref\": \"#/components/schemas/ApiError\" } } }\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\",\r\n            \"content\": { \"*/*\": { \"schema\": { \"$ref\": \"#/components/schemas/ApiError\" } } }\r\n          },\r\n          \"400\": {\r\n            \"description\": \"Bad Request\",\r\n            \"content\": { \"*/*\": { \"schema\": { \"$ref\": \"#/components/schemas/ApiError\" } } }\r\n          },\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/Organization\" } } }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/api/v1/usercontext\": {\r\n      \"get\": {\r\n        \"tags\": [ \"user context\" ],\r\n        \"summary\": \"GET user context\",\r\n        \"description\": \"Get a the user context for the current user.\",\r\n        \"operationId\": \"getUserContext\",\r\n        \"responses\": {\r\n          \"401\": {\r\n            \"description\": \"Unauthorized\",\r\n            \"content\": { \"*/*\": { \"schema\": { \"$ref\": \"#/components/schemas/ApiError\" } } }\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\",\r\n            \"content\": { \"*/*\": { \"schema\": { \"$ref\": \"#/components/schemas/ApiError\" } } }\r\n          },\r\n          \"400\": {\r\n            \"description\": \"Bad Request\",\r\n            \"content\": { \"*/*\": { \"schema\": { \"$ref\": \"#/components/schemas/ApiError\" } } }\r\n          },\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/UserContext\" } } }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/api/v1/telemetry/devices\": {\r\n      \"get\": {\r\n        \"tags\": [ \"telemetry\" ],\r\n        \"summary\": \"GET telemetry packets\",\r\n        \"description\": \"Get a JSON array of rfPacketTelemetry matching the given parameters.\",\r\n        \"operationId\": \"getTelemetry\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"organizationId\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Numeric Organization ID.\",\r\n            \"required\": false,\r\n            \"schema\": {\r\n              \"type\": \"integer\",\r\n              \"format\": \"int32\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"srcDeviceType\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Filters to telemetry from devices of this type. Required.\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"integer\",\r\n              \"format\": \"int32\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"srcDeviceId\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Filters to telemetry from devices of this id. Required.\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"integer\",\r\n              \"format\": \"int32\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"startTime\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Filters to telemetry at a time at or after (>=) startTime (ISO 8601 format, UTC time zone). Optional.\",\r\n            \"required\": false,\r\n            \"schema\": {\r\n              \"type\": \"string\",\r\n              \"format\": \"date-time\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"endTime\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Filters to telemetry at a time strictly before (<) endTime (ISO 8601 format, UTC time zone). Optional.\",\r\n            \"required\": false,\r\n            \"schema\": {\r\n              \"type\": \"string\",\r\n              \"format\": \"date-time\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"count\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Return at most <count> telemetries. Default value 100. Max value 500. Optional.\",\r\n            \"required\": false,\r\n            \"schema\": {\r\n              \"type\": \"integer\",\r\n              \"format\": \"int32\",\r\n              \"default\": 100\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"sortAsc\",\r\n            \"in\": \"query\",\r\n            \"description\": \"True to sort ascending by telemetryAt, false to sort descending. False by default. Optional.\",\r\n            \"required\": false,\r\n            \"schema\": {\r\n              \"type\": \"boolean\",\r\n              \"default\": false\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"401\": {\r\n            \"description\": \"Unauthorized\",\r\n            \"content\": { \"*/*\": { \"schema\": { \"$ref\": \"#/components/schemas/ApiError\" } } }\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\",\r\n            \"content\": { \"*/*\": { \"schema\": { \"$ref\": \"#/components/schemas/ApiError\" } } }\r\n          },\r\n          \"400\": {\r\n            \"description\": \"Bad Request\",\r\n            \"content\": { \"*/*\": { \"schema\": { \"$ref\": \"#/components/schemas/ApiError\" } } }\r\n          },\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": { \"$ref\": \"#/components/schemas/RFPacketTelemetryPublic\" }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/api/v1/telemetry/devices/latest\": {\r\n      \"get\": {\r\n        \"tags\": [ \"telemetry\" ],\r\n        \"summary\": \"GET telemetry packets\",\r\n        \"description\": \"Get a JSON array of rfPacketTelemetry matching the given parameters.\",\r\n        \"operationId\": \"getLatestTelemetry\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"organizationId\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Numeric Organization ID.\",\r\n            \"required\": false,\r\n            \"schema\": {\r\n              \"type\": \"integer\",\r\n              \"format\": \"int32\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"startTime\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Filters to telemetry at a time at or after (>=) startTime (ISO 8601 format, UTC time zone). Optional.\",\r\n            \"required\": false,\r\n            \"schema\": {\r\n              \"type\": \"string\",\r\n              \"format\": \"date-time\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"endTime\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Filters to telemetry at a time strictly before (<) endTime (ISO 8601 format, UTC time zone). Optional.\",\r\n            \"required\": false,\r\n            \"schema\": {\r\n              \"type\": \"string\",\r\n              \"format\": \"date-time\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"401\": {\r\n            \"description\": \"Unauthorized\",\r\n            \"content\": { \"*/*\": { \"schema\": { \"$ref\": \"#/components/schemas/ApiError\" } } }\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\",\r\n            \"content\": { \"*/*\": { \"schema\": { \"$ref\": \"#/components/schemas/ApiError\" } } }\r\n          },\r\n          \"400\": {\r\n            \"description\": \"Bad Request\",\r\n            \"content\": { \"*/*\": { \"schema\": { \"$ref\": \"#/components/schemas/ApiError\" } } }\r\n          },\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": { \"$ref\": \"#/components/schemas/RFPacketTelemetryPublic\" }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/api/v1/messages/{userApplicationId}/rxack/{packetId}\": {\r\n      \"get\": {\r\n        \"tags\": [ \"messages\" ],\r\n        \"summary\": \"Acknowledge receipt of UserMessage via GET. \",\r\n        \"description\": \"This endpoint acknowledges receipt of a user application message (UserMessage).  Path variables {userApplicationId} and {packetId} are required. A JSON object is returned with the new \\\"packetId\\\" and \\\"status\\\" of \\\"OK\\\" for success or \\\"ERROR\\\" for failure.\",\r\n        \"operationId\": \"ackRxMessageOld\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"userApplicationId\",\r\n            \"in\": \"path\",\r\n            \"description\": \"Numeric User Application ID. Ignored.\",\r\n            \"required\": true,\r\n            \"schema\": { \"type\": \"string\" }\r\n          },\r\n          {\r\n            \"name\": \"packetId\",\r\n            \"in\": \"path\",\r\n            \"description\": \"Numeric packet ID.  Required.\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"integer\",\r\n              \"format\": \"int64\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"status\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Set numeric message status.  Use value of 0 for received, 2 for acknowledged. Default is 2. Optional\",\r\n            \"required\": false,\r\n            \"schema\": {\r\n              \"type\": \"integer\",\r\n              \"format\": \"int32\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"Accept\",\r\n            \"in\": \"header\",\r\n            \"schema\": {\r\n              \"type\": \"string\",\r\n              \"enum\": [ \"application/json\" ]\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"401\": {\r\n            \"description\": \"Unauthorized\",\r\n            \"content\": { \"*/*\": { \"schema\": { \"$ref\": \"#/components/schemas/ApiError\" } } }\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\",\r\n            \"content\": { \"*/*\": { \"schema\": { \"$ref\": \"#/components/schemas/ApiError\" } } }\r\n          },\r\n          \"400\": {\r\n            \"description\": \"Bad Request\",\r\n            \"content\": { \"*/*\": { \"schema\": { \"$ref\": \"#/components/schemas/ApiError\" } } }\r\n          },\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/PacketPostReturn\" } } }\r\n          }\r\n        },\r\n        \"deprecated\": true\r\n      }\r\n    },\r\n    \"/api/v1/messages/{organizationId}\": {\r\n      \"get\": {\r\n        \"tags\": [ \"messages\" ],\r\n        \"summary\": \"GET user messages by organization ID\",\r\n        \"description\": \"This endpoint requests a JSON formatted array of messages which are filtered by the parameters. Only returns messages from the last 30 days.\",\r\n        \"operationId\": \"getMessagesByOrganizationId\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"organizationId\",\r\n            \"in\": \"path\",\r\n            \"description\": \"Provided for backwards compatibility with application ID\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"integer\",\r\n              \"format\": \"int32\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"userApplicationId\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Numeric User Application ID.\",\r\n            \"required\": false,\r\n            \"schema\": {\r\n              \"type\": \"integer\",\r\n              \"format\": \"int32\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"devicetype\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Numeric Swarm device type.\",\r\n            \"required\": false,\r\n            \"schema\": {\r\n              \"type\": \"integer\",\r\n              \"format\": \"int32\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"deviceid\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Numeric Swarm device ID.\",\r\n            \"required\": false,\r\n            \"schema\": { \"type\": \"string\" }\r\n          },\r\n          {\r\n            \"name\": \"devicename\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Swarm device name. Deprecated and no longer used to filter messages. Use devicetype and deviceid instead.\",\r\n            \"required\": false,\r\n            \"deprecated\": true,\r\n            \"schema\": { \"type\": \"string\" }\r\n          },\r\n          {\r\n            \"name\": \"viadeviceid\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Numeric Swarm firsthop groundstation device ID. Use -1 for last known nexthop for this device.\",\r\n            \"required\": false,\r\n            \"schema\": { \"type\": \"string\" }\r\n          },\r\n          {\r\n            \"name\": \"count\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Result count requested. Default is 100. Max is 1000.\",\r\n            \"required\": false,\r\n            \"schema\": {\r\n              \"type\": \"integer\",\r\n              \"format\": \"int32\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"status\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Numeric filter for message status. Use value of 0 for unacknowledged (not yet processed by user), 2 for acknowledged. Default is 0. Optional.\",\r\n            \"required\": false,\r\n            \"schema\": {\r\n              \"type\": \"integer\",\r\n              \"format\": \"int32\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"beforepacketid\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Used for pagination. Pass the last packet ID from the previous page. Optional.\",\r\n            \"required\": false,\r\n            \"schema\": {\r\n              \"type\": \"integer\",\r\n              \"format\": \"int64\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"packetid\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Numeric filter for packet ID.  Returns single message matching packet ID. Optional.\",\r\n            \"required\": false,\r\n            \"schema\": {\r\n              \"type\": \"integer\",\r\n              \"format\": \"int64\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"direction\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Filter for direction of travel.  Use \\\"fromdevice\\\" for messages received from Swarm devices or \\\"todevice\\\" for messages sent to Swarm devices. Default is \\\"fromdevice\\\". Optional.\",\r\n            \"required\": false,\r\n            \"schema\": { \"type\": \"string\" }\r\n          },\r\n          {\r\n            \"name\": \"startDate\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Start date filter as UTC ISO 8601. Optional.\",\r\n            \"required\": false,\r\n            \"schema\": {\r\n              \"type\": \"string\",\r\n              \"format\": \"date-time\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"endDate\",\r\n            \"in\": \"query\",\r\n            \"description\": \"End date filter as UTC ISO 8601. Must be after startDate. Optional.\",\r\n            \"required\": false,\r\n            \"schema\": {\r\n              \"type\": \"string\",\r\n              \"format\": \"date-time\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"401\": {\r\n            \"description\": \"Unauthorized\",\r\n            \"content\": { \"*/*\": { \"schema\": { \"$ref\": \"#/components/schemas/ApiError\" } } }\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\",\r\n            \"content\": { \"*/*\": { \"schema\": { \"$ref\": \"#/components/schemas/ApiError\" } } }\r\n          },\r\n          \"400\": {\r\n            \"description\": \"Bad Request\",\r\n            \"content\": { \"*/*\": { \"schema\": { \"$ref\": \"#/components/schemas/ApiError\" } } }\r\n          },\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": { \"$ref\": \"#/components/schemas/UserMessage\" }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"deprecated\": true\r\n      }\r\n    },\r\n    \"/api/v1/messages/details/{messageId}\": {\r\n      \"get\": {\r\n        \"tags\": [ \"messages\" ],\r\n        \"summary\": \"GET user message by message id\",\r\n        \"description\": \"This endpoint requests details, including retry attempts, for a message with the given message id. Only returns messages that have been sent in the last 30 days,though previous attempts to send the message from before 30 days ago may be included.\",\r\n        \"operationId\": \"getMessages_1\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"messageId\",\r\n            \"in\": \"path\",\r\n            \"description\": \"Message ID to get details for.\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"integer\",\r\n              \"format\": \"int64\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"organizationId\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Organization ID. Optional.\",\r\n            \"required\": false,\r\n            \"schema\": {\r\n              \"type\": \"integer\",\r\n              \"format\": \"int32\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"401\": {\r\n            \"description\": \"Unauthorized\",\r\n            \"content\": { \"*/*\": { \"schema\": { \"$ref\": \"#/components/schemas/ApiError\" } } }\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\",\r\n            \"content\": { \"*/*\": { \"schema\": { \"$ref\": \"#/components/schemas/ApiError\" } } }\r\n          },\r\n          \"400\": {\r\n            \"description\": \"Bad Request\",\r\n            \"content\": { \"*/*\": { \"schema\": { \"$ref\": \"#/components/schemas/ApiError\" } } }\r\n          },\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/UserMessageDetails\" } } }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/api/v1/messages/count\": {\r\n      \"get\": {\r\n        \"tags\": [ \"messages\" ],\r\n        \"summary\": \"GET total count of messages sent through the network by the current user.\",\r\n        \"description\": \"Gets the count of messages associated with userApplicationIds. Counts messages both received (from edge devices) and sent (to edge devices) through the Swarm network. Ignores messages marked as duplicate messages.\",\r\n        \"operationId\": \"getMessageCount\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"startTime\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Filters to messages which are received by the Hive at a time at or after (>=) startTime (ISO 8601 format, UTC time zone). Optional, default is all available data.\",\r\n            \"required\": false,\r\n            \"schema\": { \"type\": \"string\" }\r\n          },\r\n          {\r\n            \"name\": \"endTime\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Filters to messages which are received by the Hive at a time strictly before (<) endTime (ISO 8601 format, UTC time zone). Optional, default is all available data.\",\r\n            \"required\": false,\r\n            \"schema\": { \"type\": \"string\" }\r\n          },\r\n          {\r\n            \"name\": \"deviceType\",\r\n            \"in\": \"query\",\r\n            \"description\": \"This parameter is deprecated and will be ignored if present.\",\r\n            \"required\": false,\r\n            \"deprecated\": true,\r\n            \"schema\": {\r\n              \"type\": \"integer\",\r\n              \"format\": \"int32\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"401\": {\r\n            \"description\": \"Unauthorized\",\r\n            \"content\": { \"*/*\": { \"schema\": { \"$ref\": \"#/components/schemas/ApiError\" } } }\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\",\r\n            \"content\": { \"*/*\": { \"schema\": { \"$ref\": \"#/components/schemas/ApiError\" } } }\r\n          },\r\n          \"400\": {\r\n            \"description\": \"Bad Request\",\r\n            \"content\": { \"*/*\": { \"schema\": { \"$ref\": \"#/components/schemas/ApiError\" } } }\r\n          },\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": { \"application/json\": { \"schema\": { \"$ref\": \"#/components/schemas/MessageCountByApplicationIdJson\" } } }\r\n          }\r\n        },\r\n        \"deprecated\": true\r\n      }\r\n    },\r\n    \"/api/v1/devices\": {\r\n      \"get\": {\r\n        \"tags\": [ \"devices\" ],\r\n        \"summary\": \"GET devices\",\r\n        \"description\": \"<p>Get a JSON array of devices visible to the user, filtered by the parameters.</p><p>Recommended use cases:</p><li>Get all user devices</li><li>Get by devicetype</li><li>Get by devicetype and deviceid</li><li>Get by devicename</li><li>Get by deviceuuid</li></ul><p>Note that getting by multiple fields will try to filter by <strong>all</strong> of those fields. For example, trying to get by devicetype + devicename could return no results if the device with the given name doesn't have the given type.</p>\",\r\n        \"operationId\": \"getDevices\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"devicetype\",\r\n            \"in\": \"query\",\r\n            \"required\": false,\r\n            \"schema\": {\r\n              \"type\": \"integer\",\r\n              \"format\": \"int32\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"deviceid\",\r\n            \"in\": \"query\",\r\n            \"required\": false,\r\n            \"schema\": { \"type\": \"string\" }\r\n          },\r\n          {\r\n            \"name\": \"devicename\",\r\n            \"in\": \"query\",\r\n            \"required\": false,\r\n            \"schema\": { \"type\": \"string\" }\r\n          },\r\n          {\r\n            \"name\": \"deviceuuid\",\r\n            \"in\": \"query\",\r\n            \"required\": false,\r\n            \"schema\": { \"type\": \"string\" }\r\n          },\r\n          {\r\n            \"name\": \"authCode\",\r\n            \"in\": \"query\",\r\n            \"required\": false,\r\n            \"schema\": { \"type\": \"string\" }\r\n          },\r\n          {\r\n            \"name\": \"applicationid\",\r\n            \"in\": \"query\",\r\n            \"required\": false,\r\n            \"deprecated\": true,\r\n            \"schema\": {\r\n              \"type\": \"integer\",\r\n              \"format\": \"int32\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"organizationId\",\r\n            \"in\": \"query\",\r\n            \"required\": false,\r\n            \"schema\": {\r\n              \"type\": \"integer\",\r\n              \"format\": \"int32\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"count\",\r\n            \"in\": \"query\",\r\n            \"required\": false,\r\n            \"schema\": {\r\n              \"type\": \"integer\",\r\n              \"format\": \"int32\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"sortDesc\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Sort descending by device id if true; sort ascending otherwise. False by default.\",\r\n            \"required\": false,\r\n            \"schema\": {\r\n              \"type\": \"boolean\",\r\n              \"default\": false\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"401\": {\r\n            \"description\": \"Unauthorized\",\r\n            \"content\": { \"*/*\": { \"schema\": { \"$ref\": \"#/components/schemas/ApiError\" } } }\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\",\r\n            \"content\": { \"*/*\": { \"schema\": { \"$ref\": \"#/components/schemas/ApiError\" } } }\r\n          },\r\n          \"400\": {\r\n            \"description\": \"Bad Request\",\r\n            \"content\": { \"*/*\": { \"schema\": { \"$ref\": \"#/components/schemas/ApiError\" } } }\r\n          },\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": { \"$ref\": \"#/components/schemas/Device\" }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/api/v1/devices/count\": {\r\n      \"get\": {\r\n        \"tags\": [ \"devices\" ],\r\n        \"summary\": \"GET count of devices\",\r\n        \"description\": \"Get a plaintext string of the number of devices visible to the user, filtered by the parameters.\",\r\n        \"operationId\": \"getDeviceCount\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"devicetype\",\r\n            \"in\": \"query\",\r\n            \"required\": false,\r\n            \"schema\": {\r\n              \"type\": \"integer\",\r\n              \"format\": \"int32\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"401\": {\r\n            \"description\": \"Unauthorized\",\r\n            \"content\": { \"*/*\": { \"schema\": { \"$ref\": \"#/components/schemas/ApiError\" } } }\r\n          },\r\n          \"403\": {\r\n            \"description\": \"Forbidden\",\r\n            \"content\": { \"*/*\": { \"schema\": { \"$ref\": \"#/components/schemas/ApiError\" } } }\r\n          },\r\n          \"400\": {\r\n            \"description\": \"Bad Request\",\r\n            \"content\": { \"*/*\": { \"schema\": { \"$ref\": \"#/components/schemas/ApiError\" } } }\r\n          },\r\n          \"200\": {\r\n            \"description\": \"OK\",\r\n            \"content\": { \"*/*\": { \"schema\": { \"type\": \"string\" } } }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/login\": {\r\n      \"post\": {\r\n        \"tags\": [ \"auth\" ],\r\n        \"summary\": \"POST login\",\r\n        \"description\": \"<p>Use username and password to log in.</p><p>On success: returns status code 200. The response body is the JSON <code>{\\\"token\\\": \\\"&lt;token&gt;\\\"}</code>, along with the header <code>Set-Cookie: JSESSIONID=&lt;token&gt;; Path=/; Secure; HttpOnly;</code>. The tokens in the return value and the <code>Set-Cookie</code> header are the same. The token is a long string of letters, numbers, and punctuation.</p><p>On failure: returns status code 401.</p><p>To make authenticated requests, there are two ways: <ul><li>(Preferred) Use the token as a Bearer Authentication token by including the HTTP header <code>Authorization: Bearer &lt;token&gt;</code> in further requests.</li><li>(Deprecated) Use the token as the JSESSIONID cookie in further requests.</li></ul></p>\",\r\n        \"operationId\": \"postLogin\",\r\n        \"requestBody\": { \"content\": { \"application/x-www-form-urlencoded\": { \"schema\": { \"$ref\": \"#/components/schemas/LoginForm\" } } } },\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Login success\",\r\n            \"headers\": {\r\n              \"Set-Cookie\": {\r\n                \"description\": \"<p>Session cookie to use for authenticating further requests.</p><p>NOTE: When using \\\"try it out\\\" on the API documentation page, this header will be omitted from the response headers due to browser security restrictions: see the <a href=\\\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie\\\">Set-Cookie</a> documentation for more details.</p><p>In lieu of looking at this header value during testing, simply use the returned token in the response body.</p>\",\r\n                \"schema\": {\r\n                  \"type\": \"string\",\r\n                  \"example\": \"JSESSIONID=Very1Long_random.L00King2String; Path=/; HttpOnly\"\r\n                }\r\n              }\r\n            },\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"required\": [ \"token\" ],\r\n                  \"type\": \"object\",\r\n                  \"properties\": {\r\n                    \"token\": {\r\n                      \"type\": \"string\",\r\n                      \"example\": \"Very1Long_random.L00King2String\"\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"401\": { \"description\": \"Login failure\" }\r\n        }\r\n      }\r\n    },\r\n    \"/logout\": {\r\n      \"get\": {\r\n        \"tags\": [ \"auth\" ],\r\n        \"summary\": \"GET logout\",\r\n        \"description\": \"Log out of the current session.<p>If user is not logged in (with a valid Bearer authentication token or JSESSIONID cookie), returns 401.</p><p>On success, returns 204 (No Content).</p>\",\r\n        \"operationId\": \"getLogout\",\r\n        \"responses\": { \"204\": { \"description\": \"Logout success\" } }\r\n      }\r\n    }\r\n  },\r\n  \"components\": {\r\n    \"schemas\": {\r\n      \"ApiError\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"status\": {\r\n            \"type\": \"string\",\r\n            \"enum\": [ \"100 CONTINUE\", \"101 SWITCHING_PROTOCOLS\", \"102 PROCESSING\", \"103 CHECKPOINT\", \"200 OK\", \"201 CREATED\", \"202 ACCEPTED\", \"203 NON_AUTHORITATIVE_INFORMATION\", \"204 NO_CONTENT\", \"205 RESET_CONTENT\", \"206 PARTIAL_CONTENT\", \"207 MULTI_STATUS\", \"208 ALREADY_REPORTED\", \"226 IM_USED\", \"300 MULTIPLE_CHOICES\", \"301 MOVED_PERMANENTLY\", \"302 FOUND\", \"302 MOVED_TEMPORARILY\", \"303 SEE_OTHER\", \"304 NOT_MODIFIED\", \"305 USE_PROXY\", \"307 TEMPORARY_REDIRECT\", \"308 PERMANENT_REDIRECT\", \"400 BAD_REQUEST\", \"401 UNAUTHORIZED\", \"402 PAYMENT_REQUIRED\", \"403 FORBIDDEN\", \"404 NOT_FOUND\", \"405 METHOD_NOT_ALLOWED\", \"406 NOT_ACCEPTABLE\", \"407 PROXY_AUTHENTICATION_REQUIRED\", \"408 REQUEST_TIMEOUT\", \"409 CONFLICT\", \"410 GONE\", \"411 LENGTH_REQUIRED\", \"412 PRECONDITION_FAILED\", \"413 PAYLOAD_TOO_LARGE\", \"413 REQUEST_ENTITY_TOO_LARGE\", \"414 URI_TOO_LONG\", \"414 REQUEST_URI_TOO_LONG\", \"415 UNSUPPORTED_MEDIA_TYPE\", \"416 REQUESTED_RANGE_NOT_SATISFIABLE\", \"417 EXPECTATION_FAILED\", \"418 I_AM_A_TEAPOT\", \"419 INSUFFICIENT_SPACE_ON_RESOURCE\", \"420 METHOD_FAILURE\", \"421 DESTINATION_LOCKED\", \"422 UNPROCESSABLE_ENTITY\", \"423 LOCKED\", \"424 FAILED_DEPENDENCY\", \"425 TOO_EARLY\", \"426 UPGRADE_REQUIRED\", \"428 PRECONDITION_REQUIRED\", \"429 TOO_MANY_REQUESTS\", \"431 REQUEST_HEADER_FIELDS_TOO_LARGE\", \"451 UNAVAILABLE_FOR_LEGAL_REASONS\", \"500 INTERNAL_SERVER_ERROR\", \"501 NOT_IMPLEMENTED\", \"502 BAD_GATEWAY\", \"503 SERVICE_UNAVAILABLE\", \"504 GATEWAY_TIMEOUT\", \"505 HTTP_VERSION_NOT_SUPPORTED\", \"506 VARIANT_ALSO_NEGOTIATES\", \"507 INSUFFICIENT_STORAGE\", \"508 LOOP_DETECTED\", \"509 BANDWIDTH_LIMIT_EXCEEDED\", \"510 NOT_EXTENDED\", \"511 NETWORK_AUTHENTICATION_REQUIRED\" ]\r\n          },\r\n          \"message\": { \"type\": \"string\" },\r\n          \"debugMessage\": { \"type\": \"string\" },\r\n          \"timestamp\": {\r\n            \"type\": \"string\",\r\n            \"format\": \"date-time\"\r\n          }\r\n        }\r\n      },\r\n      \"DeviceMetadataUpdateJson\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"deviceName\": {\r\n            \"type\": \"string\",\r\n            \"description\": \"Device name. By default, looks like F-0x00010 for deviceType = 1 and deviceId = 16\"\r\n          },\r\n          \"comments\": {\r\n            \"type\": \"string\",\r\n            \"description\": \"User comments for device\"\r\n          },\r\n          \"metadata\": {\r\n            \"type\": \"object\",\r\n            \"additionalProperties\": {\r\n              \"type\": \"string\",\r\n              \"description\": \"Key/value tags for device\"\r\n            },\r\n            \"description\": \"Key/value tags for device\"\r\n          }\r\n        }\r\n      },\r\n      \"StatusJson\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"status\": {\r\n            \"type\": \"string\",\r\n            \"enum\": [ \"100 CONTINUE\", \"101 SWITCHING_PROTOCOLS\", \"102 PROCESSING\", \"103 CHECKPOINT\", \"200 OK\", \"201 CREATED\", \"202 ACCEPTED\", \"203 NON_AUTHORITATIVE_INFORMATION\", \"204 NO_CONTENT\", \"205 RESET_CONTENT\", \"206 PARTIAL_CONTENT\", \"207 MULTI_STATUS\", \"208 ALREADY_REPORTED\", \"226 IM_USED\", \"300 MULTIPLE_CHOICES\", \"301 MOVED_PERMANENTLY\", \"302 FOUND\", \"302 MOVED_TEMPORARILY\", \"303 SEE_OTHER\", \"304 NOT_MODIFIED\", \"305 USE_PROXY\", \"307 TEMPORARY_REDIRECT\", \"308 PERMANENT_REDIRECT\", \"400 BAD_REQUEST\", \"401 UNAUTHORIZED\", \"402 PAYMENT_REQUIRED\", \"403 FORBIDDEN\", \"404 NOT_FOUND\", \"405 METHOD_NOT_ALLOWED\", \"406 NOT_ACCEPTABLE\", \"407 PROXY_AUTHENTICATION_REQUIRED\", \"408 REQUEST_TIMEOUT\", \"409 CONFLICT\", \"410 GONE\", \"411 LENGTH_REQUIRED\", \"412 PRECONDITION_FAILED\", \"413 PAYLOAD_TOO_LARGE\", \"413 REQUEST_ENTITY_TOO_LARGE\", \"414 URI_TOO_LONG\", \"414 REQUEST_URI_TOO_LONG\", \"415 UNSUPPORTED_MEDIA_TYPE\", \"416 REQUESTED_RANGE_NOT_SATISFIABLE\", \"417 EXPECTATION_FAILED\", \"418 I_AM_A_TEAPOT\", \"419 INSUFFICIENT_SPACE_ON_RESOURCE\", \"420 METHOD_FAILURE\", \"421 DESTINATION_LOCKED\", \"422 UNPROCESSABLE_ENTITY\", \"423 LOCKED\", \"424 FAILED_DEPENDENCY\", \"425 TOO_EARLY\", \"426 UPGRADE_REQUIRED\", \"428 PRECONDITION_REQUIRED\", \"429 TOO_MANY_REQUESTS\", \"431 REQUEST_HEADER_FIELDS_TOO_LARGE\", \"451 UNAVAILABLE_FOR_LEGAL_REASONS\", \"500 INTERNAL_SERVER_ERROR\", \"501 NOT_IMPLEMENTED\", \"502 BAD_GATEWAY\", \"503 SERVICE_UNAVAILABLE\", \"504 GATEWAY_TIMEOUT\", \"505 HTTP_VERSION_NOT_SUPPORTED\", \"506 VARIANT_ALSO_NEGOTIATES\", \"507 INSUFFICIENT_STORAGE\", \"508 LOOP_DETECTED\", \"509 BANDWIDTH_LIMIT_EXCEEDED\", \"510 NOT_EXTENDED\", \"511 NETWORK_AUTHENTICATION_REQUIRED\" ]\r\n          },\r\n          \"message\": { \"type\": \"string\" }\r\n        }\r\n      },\r\n      \"PasswordChangeRequestJson\": {\r\n        \"required\": [ \"newPassword\", \"oldPassword\" ],\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"oldPassword\": { \"type\": \"string\" },\r\n          \"newPassword\": { \"type\": \"string\" }\r\n        }\r\n      },\r\n      \"UserInfoChangeRequestJson\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"username\": { \"type\": \"string\" },\r\n          \"password\": { \"type\": \"string\" },\r\n          \"email\": { \"type\": \"string\" },\r\n          \"country\": { \"type\": \"string\" }\r\n        }\r\n      },\r\n      \"WebUser\": {\r\n        \"required\": [ \"enabled\", \"organizationId\", \"registered\", \"role\", \"userId\", \"username\" ],\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"userId\": {\r\n            \"type\": \"integer\",\r\n            \"format\": \"int32\"\r\n          },\r\n          \"username\": { \"type\": \"string\" },\r\n          \"organizationId\": {\r\n            \"type\": \"integer\",\r\n            \"format\": \"int32\"\r\n          },\r\n          \"enabled\": { \"type\": \"boolean\" },\r\n          \"registered\": { \"type\": \"boolean\" },\r\n          \"email\": { \"type\": \"string\" },\r\n          \"country\": { \"type\": \"string\" },\r\n          \"role\": {\r\n            \"type\": \"string\",\r\n            \"enum\": [ \"SUPER_ADMIN\", \"ADMIN\", \"USER\", \"GROUND_STATION\", \"TOOLS\" ]\r\n          },\r\n          \"userApplicationId\": {\r\n            \"type\": \"integer\",\r\n            \"format\": \"int32\",\r\n            \"deprecated\": true\r\n          }\r\n        }\r\n      },\r\n      \"UserMessage\": {\r\n        \"required\": [ \"data\", \"dataType\", \"deviceId\", \"deviceType\", \"direction\", \"hiveRxTime\", \"organizationId\", \"packetId\", \"userApplicationId\" ],\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"packetId\": {\r\n            \"type\": \"integer\",\r\n            \"description\": \"Swarm packet ID\",\r\n            \"format\": \"int64\",\r\n            \"readOnly\": true\r\n          },\r\n          \"messageId\": {\r\n            \"type\": \"integer\",\r\n            \"description\": \"Swarm message ID. There may be multiple messages for a single message ID. A message ID represents an intent to send a message, but there may be multiple Swarm packets that are required to fulfill that intent. For example, if a Hive -> device message fails to reach its destination, automatic retry attempts to send that message will have the same message ID.\",\r\n            \"format\": \"int64\",\r\n            \"readOnly\": true\r\n          },\r\n          \"deviceType\": {\r\n            \"type\": \"integer\",\r\n            \"description\": \"Swarm device type\",\r\n            \"format\": \"int32\"\r\n          },\r\n          \"deviceId\": {\r\n            \"type\": \"integer\",\r\n            \"description\": \"Swarm device ID\",\r\n            \"format\": \"int32\"\r\n          },\r\n          \"deviceName\": {\r\n            \"type\": \"string\",\r\n            \"description\": \"Swarm device name\",\r\n            \"readOnly\": true\r\n          },\r\n          \"direction\": {\r\n            \"type\": \"integer\",\r\n            \"description\": \"Direction of message\",\r\n            \"format\": \"int32\"\r\n          },\r\n          \"dataType\": {\r\n            \"type\": \"integer\",\r\n            \"description\": \"Message data type, always = 6\",\r\n            \"format\": \"int32\",\r\n            \"readOnly\": true\r\n          },\r\n          \"userApplicationId\": {\r\n            \"type\": \"integer\",\r\n            \"description\": \"Application ID\",\r\n            \"format\": \"int32\"\r\n          },\r\n          \"organizationId\": {\r\n            \"type\": \"integer\",\r\n            \"description\": \"Organization ID\",\r\n            \"format\": \"int32\"\r\n          },\r\n          \"len\": {\r\n            \"type\": \"integer\",\r\n            \"description\": \"Length of data (in bytes) before base64 encoding\",\r\n            \"format\": \"int32\",\r\n            \"readOnly\": true\r\n          },\r\n          \"data\": {\r\n            \"type\": \"string\",\r\n            \"description\": \"Base64 encoded data string\",\r\n            \"format\": \"byte\"\r\n          },\r\n          \"ackPacketId\": {\r\n            \"type\": \"integer\",\r\n            \"description\": \"Swarm packet ID of acknowledging packet from device\",\r\n            \"format\": \"int64\",\r\n            \"readOnly\": true\r\n          },\r\n          \"status\": {\r\n            \"type\": \"integer\",\r\n            \"description\": \"Message status. Possible values:\\n0 = incoming message (from a device)\\n1 = outgoing message (to a device)\\n2 = incoming message, acknowledged as seen by customer. OR a outgoing message packet is on groundstation\\n3 = outgoing message, packet is on satellite\\n-1 = error\\n-3 = failed to deliver, retrying\\n-4 = failed to deliver, will not re-attempt\\n\",\r\n            \"format\": \"int32\",\r\n            \"readOnly\": true\r\n          },\r\n          \"hiveRxTime\": {\r\n            \"type\": \"string\",\r\n            \"description\": \"Time that the message was received by the Hive\",\r\n            \"format\": \"date-time\",\r\n            \"readOnly\": true\r\n          }\r\n        }\r\n      },\r\n      \"PacketPostReturn\": {\r\n        \"required\": [ \"packetId\", \"status\" ],\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"packetId\": {\r\n            \"type\": \"integer\",\r\n            \"description\": \"Swarm packet ID.\",\r\n            \"format\": \"int64\"\r\n          },\r\n          \"status\": {\r\n            \"type\": \"string\",\r\n            \"description\": \"Submission status, \\\"OK\\\" or \\\"ERROR\\\" with a description of the error.\"\r\n          }\r\n        }\r\n      },\r\n      \"Device\": {\r\n        \"required\": [ \"deviceId\", \"deviceType\", \"metadata\" ],\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"deviceType\": {\r\n            \"type\": \"integer\",\r\n            \"description\": \"3 bit device type. 1 = fieldBee, 2 = stratoBee, 3 = spaceBee, 4 = groundBee, 5 = Hive\",\r\n            \"format\": \"int32\"\r\n          },\r\n          \"deviceId\": {\r\n            \"type\": \"integer\",\r\n            \"description\": \"18 bit device id\",\r\n            \"format\": \"int32\"\r\n          },\r\n          \"deviceName\": {\r\n            \"type\": \"string\",\r\n            \"description\": \"Device name. By default, looks like F-0x00010 for deviceType = 1 and deviceId = 16\",\r\n            \"example\": \"\"\r\n          },\r\n          \"organizationId\": {\r\n            \"type\": \"integer\",\r\n            \"description\": \"Organization id the device belongs to\",\r\n            \"format\": \"int32\"\r\n          },\r\n          \"authCode\": {\r\n            \"type\": \"string\",\r\n            \"readOnly\": true\r\n          },\r\n          \"comments\": {\r\n            \"type\": \"string\",\r\n            \"description\": \"User comments for device\",\r\n            \"example\": \"\"\r\n          },\r\n          \"hiveCreationTime\": {\r\n            \"type\": \"string\",\r\n            \"format\": \"date-time\",\r\n            \"readOnly\": true\r\n          },\r\n          \"hiveFirstheardTime\": {\r\n            \"type\": \"string\",\r\n            \"format\": \"date-time\",\r\n            \"readOnly\": true\r\n          },\r\n          \"hiveLastheardTime\": {\r\n            \"type\": \"string\",\r\n            \"format\": \"date-time\",\r\n            \"readOnly\": true\r\n          },\r\n          \"firmwareVersion\": {\r\n            \"type\": \"string\",\r\n            \"description\": \"Device firmware version\",\r\n            \"example\": \"\"\r\n          },\r\n          \"hardwareVersion\": {\r\n            \"type\": \"string\",\r\n            \"description\": \"Device hardware version\",\r\n            \"example\": \"\"\r\n          },\r\n          \"lastTelemetryReportPacketId\": {\r\n            \"type\": \"integer\",\r\n            \"description\": \"Packet id of last telemetry report from device\",\r\n            \"format\": \"int64\",\r\n            \"readOnly\": true\r\n          },\r\n          \"lastHeardByDeviceType\": {\r\n            \"type\": \"integer\",\r\n            \"format\": \"int32\",\r\n            \"readOnly\": true\r\n          },\r\n          \"lastHeardByDeviceId\": {\r\n            \"type\": \"integer\",\r\n            \"format\": \"int32\",\r\n            \"readOnly\": true\r\n          },\r\n          \"lastHeardTime\": {\r\n            \"type\": \"string\",\r\n            \"format\": \"date-time\",\r\n            \"readOnly\": true\r\n          },\r\n          \"counter\": {\r\n            \"type\": \"integer\",\r\n            \"format\": \"int32\",\r\n            \"readOnly\": true\r\n          },\r\n          \"dayofyear\": {\r\n            \"type\": \"integer\",\r\n            \"format\": \"int32\",\r\n            \"readOnly\": true\r\n          },\r\n          \"lastHeardCounter\": {\r\n            \"type\": \"integer\",\r\n            \"format\": \"int32\",\r\n            \"readOnly\": true\r\n          },\r\n          \"lastHeardDayofyear\": {\r\n            \"type\": \"integer\",\r\n            \"format\": \"int32\",\r\n            \"readOnly\": true\r\n          },\r\n          \"lastHeardByGroundstationId\": {\r\n            \"type\": \"integer\",\r\n            \"format\": \"int32\",\r\n            \"readOnly\": true\r\n          },\r\n          \"uptime\": {\r\n            \"type\": \"integer\",\r\n            \"format\": \"int32\",\r\n            \"readOnly\": true\r\n          },\r\n          \"status\": {\r\n            \"type\": \"integer\",\r\n            \"description\": \"Status of device\",\r\n            \"format\": \"int32\"\r\n          },\r\n          \"twoWayEnabled\": {\r\n            \"type\": \"boolean\",\r\n            \"description\": \"Whether or not this device can receive return messages from the hive. Only applies to field devices.\",\r\n            \"example\": false,\r\n            \"default\": false\r\n          },\r\n          \"dataEncryptionEnabled\": {\r\n            \"type\": \"boolean\",\r\n            \"description\": \"Whether messages to/from this device are encrypted.\",\r\n            \"example\": false,\r\n            \"default\": false\r\n          },\r\n          \"metadata\": {\r\n            \"type\": \"object\",\r\n            \"additionalProperties\": {\r\n              \"type\": \"string\",\r\n              \"description\": \"Key/value metadata for this device.\"\r\n            },\r\n            \"description\": \"Key/value metadata for this device.\"\r\n          },\r\n          \"userApplicationId\": {\r\n            \"type\": \"integer\",\r\n            \"format\": \"int32\",\r\n            \"deprecated\": true\r\n          }\r\n        }\r\n      },\r\n      \"OrganizationUpdateJson\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"isBilled\": { \"type\": \"boolean\" },\r\n          \"name\": { \"type\": \"string\" },\r\n          \"billingEmail\": { \"type\": \"string\" },\r\n          \"stripeCustomerId\": { \"type\": \"string\" }\r\n        }\r\n      },\r\n      \"Organization\": {\r\n        \"required\": [ \"name\", \"organizationId\" ],\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"isBilled\": { \"type\": \"boolean\" },\r\n          \"organizationId\": {\r\n            \"type\": \"integer\",\r\n            \"format\": \"int32\"\r\n          },\r\n          \"name\": { \"type\": \"string\" },\r\n          \"billingEmail\": { \"type\": \"string\" }\r\n        }\r\n      },\r\n      \"UserContext\": {\r\n        \"required\": [ \"enabled\", \"featureFlags\", \"organizationId\", \"registered\", \"role\", \"userId\", \"username\" ],\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"userId\": {\r\n            \"type\": \"integer\",\r\n            \"format\": \"int32\"\r\n          },\r\n          \"username\": { \"type\": \"string\" },\r\n          \"organizationId\": {\r\n            \"type\": \"integer\",\r\n            \"format\": \"int32\"\r\n          },\r\n          \"enabled\": { \"type\": \"boolean\" },\r\n          \"registered\": { \"type\": \"boolean\" },\r\n          \"email\": { \"type\": \"string\" },\r\n          \"country\": { \"type\": \"string\" },\r\n          \"role\": {\r\n            \"type\": \"string\",\r\n            \"enum\": [ \"SUPER_ADMIN\", \"ADMIN\", \"USER\", \"GROUND_STATION\", \"TOOLS\" ]\r\n          },\r\n          \"featureFlags\": {\r\n            \"type\": \"object\",\r\n            \"additionalProperties\": { \"type\": \"boolean\" }\r\n          },\r\n          \"userApplicationId\": {\r\n            \"type\": \"integer\",\r\n            \"format\": \"int32\",\r\n            \"deprecated\": true\r\n          }\r\n        }\r\n      },\r\n      \"RFPacketTelemetryPublic\": {\r\n        \"required\": [ \"deviceId\", \"deviceType\", \"packetId\", \"telemetryAltitude\", \"telemetryAt\", \"telemetryBatteryCurrent\", \"telemetryBatteryVoltage\", \"telemetryCourse\", \"telemetryLatitude\", \"telemetryLongitude\", \"telemetrySpeed\", \"telemetryTemperatureK\", \"telemetryVersion\" ],\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"packetId\": {\r\n            \"type\": \"integer\",\r\n            \"format\": \"int64\"\r\n          },\r\n          \"telemetryVersion\": {\r\n            \"type\": \"integer\",\r\n            \"format\": \"int32\"\r\n          },\r\n          \"telemetryAt\": {\r\n            \"type\": \"string\",\r\n            \"format\": \"date-time\"\r\n          },\r\n          \"telemetryLatitude\": {\r\n            \"type\": \"number\",\r\n            \"format\": \"double\"\r\n          },\r\n          \"telemetryLongitude\": {\r\n            \"type\": \"number\",\r\n            \"format\": \"double\"\r\n          },\r\n          \"telemetryAltitude\": {\r\n            \"type\": \"integer\",\r\n            \"format\": \"int32\"\r\n          },\r\n          \"telemetryCourse\": {\r\n            \"type\": \"integer\",\r\n            \"format\": \"int32\"\r\n          },\r\n          \"telemetrySpeed\": {\r\n            \"type\": \"integer\",\r\n            \"format\": \"int32\"\r\n          },\r\n          \"telemetryBatteryVoltage\": {\r\n            \"type\": \"integer\",\r\n            \"format\": \"int32\"\r\n          },\r\n          \"telemetryBatteryCurrent\": {\r\n            \"type\": \"integer\",\r\n            \"format\": \"int32\"\r\n          },\r\n          \"telemetryTemperatureK\": {\r\n            \"type\": \"integer\",\r\n            \"format\": \"int32\"\r\n          },\r\n          \"deviceType\": {\r\n            \"type\": \"integer\",\r\n            \"format\": \"int32\"\r\n          },\r\n          \"deviceId\": {\r\n            \"type\": \"integer\",\r\n            \"format\": \"int32\"\r\n          },\r\n          \"ecefVectors\": { \"type\": \"string\" },\r\n          \"telemetrySatCount\": {\r\n            \"type\": \"integer\",\r\n            \"format\": \"int32\"\r\n          }\r\n        }\r\n      },\r\n      \"UserMessageDetails\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"messageId\": {\r\n            \"type\": \"integer\",\r\n            \"format\": \"int64\"\r\n          },\r\n          \"attempts\": {\r\n            \"type\": \"array\",\r\n            \"items\": { \"$ref\": \"#/components/schemas/UserMessage\" }\r\n          }\r\n        }\r\n      },\r\n      \"ApplicationIdMessageCountJson\": {\r\n        \"required\": [ \"applicationId\", \"messageCount\", \"messageCountsByDevice\" ],\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"messageCount\": {\r\n            \"type\": \"integer\",\r\n            \"description\": \"Total message count\",\r\n            \"format\": \"int32\"\r\n          },\r\n          \"fromDeviceMessageCount\": {\r\n            \"type\": \"integer\",\r\n            \"description\": \"Total messages sent from a device to the hive\",\r\n            \"format\": \"int32\"\r\n          },\r\n          \"toDeviceMessageCount\": {\r\n            \"type\": \"integer\",\r\n            \"description\": \"Total messages sent from the hive to a device\",\r\n            \"format\": \"int32\"\r\n          },\r\n          \"messageCountsByDevice\": {\r\n            \"type\": \"array\",\r\n            \"description\": \"Message count by device id\",\r\n            \"items\": { \"$ref\": \"#/components/schemas/DeviceMessageCountJson\" }\r\n          },\r\n          \"applicationId\": {\r\n            \"type\": \"integer\",\r\n            \"description\": \"Application id\",\r\n            \"format\": \"int32\"\r\n          }\r\n        },\r\n        \"description\": \"Message count by application id\"\r\n      },\r\n      \"DeviceMessageCountJson\": {\r\n        \"required\": [ \"deviceId\", \"deviceType\", \"messageCount\" ],\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"messageCount\": {\r\n            \"type\": \"integer\",\r\n            \"description\": \"Total message count\",\r\n            \"format\": \"int32\"\r\n          },\r\n          \"fromDeviceMessageCount\": {\r\n            \"type\": \"integer\",\r\n            \"description\": \"Total messages sent from a device to the hive\",\r\n            \"format\": \"int32\"\r\n          },\r\n          \"toDeviceMessageCount\": {\r\n            \"type\": \"integer\",\r\n            \"description\": \"Total messages sent from the hive to a device\",\r\n            \"format\": \"int32\"\r\n          },\r\n          \"deviceType\": {\r\n            \"type\": \"integer\",\r\n            \"description\": \"Device type\",\r\n            \"format\": \"int32\"\r\n          },\r\n          \"deviceId\": {\r\n            \"type\": \"integer\",\r\n            \"description\": \"Device id\",\r\n            \"format\": \"int32\"\r\n          }\r\n        },\r\n        \"description\": \"Message count by device id\"\r\n      },\r\n      \"MessageCountByApplicationIdJson\": {\r\n        \"required\": [ \"messageCountsByApplicationId\", \"totalMessageCount\" ],\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"totalMessageCount\": {\r\n            \"type\": \"integer\",\r\n            \"description\": \"Total message count\",\r\n            \"format\": \"int32\"\r\n          },\r\n          \"messageCountsByApplicationId\": {\r\n            \"type\": \"array\",\r\n            \"description\": \"Message count by application id\",\r\n            \"items\": { \"$ref\": \"#/components/schemas/ApplicationIdMessageCountJson\" }\r\n          }\r\n        }\r\n      },\r\n      \"LoginForm\": {\r\n        \"required\": [ \"username\", \"password\" ],\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"username\": { \"type\": \"string\" },\r\n          \"password\": { \"type\": \"string\" }\r\n        }\r\n      }\r\n    },\r\n    \"securitySchemes\": {\r\n      \"cookieAuth\": {\r\n        \"type\": \"apiKey\",\r\n        \"name\": \"JSESSIONID\",\r\n        \"in\": \"cookie\"\r\n      },\r\n      \"bearerTokenAuth\": {\r\n        \"type\": \"http\",\r\n        \"scheme\": \"bearer\",\r\n        \"bearerFormat\": \"JWT\"\r\n      }\r\n    }\r\n  }\r\n}",
      "url": "",
      "output": null,
      "newLineBehavior": "Auto"
    }
  },
  "codeGenerators": {
    "openApiToCSharpClient": {
      "clientBaseClass": null,
      "configurationClass": null,
      "generateClientClasses": true,
      "generateClientInterfaces": false,
      "clientBaseInterface": null,
      "injectHttpClient": true,
      "disposeHttpClient": true,
      "protectedMethods": [],
      "generateExceptionClasses": true,
      "exceptionClass": "ApiException",
      "wrapDtoExceptions": true,
      "useHttpClientCreationMethod": false,
      "httpClientType": "System.Net.Http.HttpClient",
      "useHttpRequestMessageCreationMethod": false,
      "useBaseUrl": true,
      "generateBaseUrlProperty": true,
      "generateSyncMethods": false,
      "generatePrepareRequestAndProcessResponseAsAsyncMethods": false,
      "exposeJsonSerializerSettings": false,
      "clientClassAccessModifier": "public",
      "typeAccessModifier": "public",
      "generateContractsOutput": false,
      "contractsNamespace": null,
      "contractsOutputFilePath": null,
      "parameterDateTimeFormat": "s",
      "parameterDateFormat": "yyyy-MM-dd",
      "generateUpdateJsonSerializerSettingsMethod": true,
      "useRequestAndResponseSerializationSettings": false,
      "serializeTypeInformation": false,
      "queryNullValue": "",
      "className": "{controller}Client",
      "operationGenerationMode": "SingleClientFromOperationId",
      "additionalNamespaceUsages": [],
      "additionalContractNamespaceUsages": [],
      "generateOptionalParameters": false,
      "generateJsonMethods": false,
      "enforceFlagEnums": false,
      "parameterArrayType": "System.Collections.Generic.IEnumerable",
      "parameterDictionaryType": "System.Collections.Generic.IDictionary",
      "responseArrayType": "System.Collections.Generic.ICollection",
      "responseDictionaryType": "System.Collections.Generic.IDictionary",
      "wrapResponses": false,
      "wrapResponseMethods": [],
      "generateResponseClasses": true,
      "responseClass": "SwaggerResponse",
      "namespace": "devMobile.SwarmSpace.BumblebeeHiveClient",
      "requiredPropertiesMustBeDefined": true,
      "dateType": "System.DateTimeOffset",
      "jsonConverters": null,
      "anyType": "object",
      "dateTimeType": "System.DateTimeOffset",
      "timeType": "System.TimeSpan",
      "timeSpanType": "System.TimeSpan",
      "arrayType": "System.Collections.Generic.ICollection",
      "arrayInstanceType": "System.Collections.ObjectModel.Collection",
      "dictionaryType": "System.Collections.Generic.IDictionary",
      "dictionaryInstanceType": "System.Collections.Generic.Dictionary",
      "arrayBaseType": "System.Collections.ObjectModel.Collection",
      "dictionaryBaseType": "System.Collections.Generic.Dictionary",
      "classStyle": "Poco",
      "jsonLibrary": "NewtonsoftJson",
      "generateDefaultValues": true,
      "generateDataAnnotations": true,
      "excludedTypeNames": [],
      "excludedParameterNames": [],
      "handleReferences": false,
      "generateImmutableArrayProperties": false,
      "generateImmutableDictionaryProperties": false,
      "jsonSerializerSettingsTransformationMethod": null,
      "inlineNamedArrays": false,
      "inlineNamedDictionaries": false,
      "inlineNamedTuples": true,
      "inlineNamedAny": false,
      "generateDtoTypes": true,
      "generateOptionalPropertiesAsNullable": false,
      "generateNullableReferenceTypes": false,
      "templateDirectory": null,
      "typeNameGeneratorType": null,
      "propertyNameGeneratorType": null,
      "enumNameGeneratorType": null,
      "serviceHost": null,
      "serviceSchemes": null,
      "output": "../../ConsoleApp2/BumblebeeHive.cs",
      "newLineBehavior": "Auto"
    }
  }
}